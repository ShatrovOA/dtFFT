name: dtfft workflow

on: [push]
jobs:
  open_mpi:
    name: Open MPI with Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Get Requirements
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get -q update
          sudo apt-get -y install gfortran-14
          sudo apt-get install libopenmpi-dev openmpi-bin
          sudo apt-get install libfftw3-dev
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Build Directory
        run: mkdir build
      - name: Building
        working-directory: ./build
        run: |
          cmake -DCMAKE_C_COMPILER=gcc-14 \
            -DCMAKE_CXX_COMPILER=g++-14 \
            -DCMAKE_Fortran_COMPILER=gfortran-14 \
            -DCMAKE_BUILD_TYPE=Debug \
            -DDTFFT_RUNNING_CICD=on \
            -DDTFFT_WITH_FFTW=on \
            -DDTFFT_MPI_VENDOR=openmpi \
            -DDTFFT_BUILD_C_CXX_API=on ..
          make VERBOSE=1
      - name: Testing
        working-directory: ./build
        run: DTFFT_ENABLE_LOG=1 CTEST_OUTPUT_ON_FAILURE=1 make coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  mpich_persistent:
    name: MPICH with persistent communications
    runs-on: ubuntu-latest
    steps:
      - name: Get Requirements
        run: |
          sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get -y install gfortran-13
          sudo apt-get install mpich libmpich-dev
          sudo apt-get install libfftw3-dev
          ls -lah /usr/include | grep mpi
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Build Directory
        run: mkdir build
      - name: Building
        working-directory: ./build
        run: |
          cmake -DCMAKE_C_COMPILER=gcc-13 \
            -DCMAKE_CXX_COMPILER=g++-13 \
            -DCMAKE_Fortran_COMPILER=gfortran-13 \
            -DCMAKE_BUILD_TYPE=Debug \
            -DDTFFT_RUNNING_CICD=on \
            -DDTFFT_WITH_FFTW=on \
            -DDTFFT_ENABLE_PERSISTENT_COMM=on \
            -DDTFFT_BUILD_SHARED=off \
            -DDTFFT_BUILD_C_CXX_API=on ..
          make VERBOSE=1
      - name: Testing
        working-directory: ./build
        run: DTFFT_ENABLE_LOG=1 make test

  mpich_macos:
    name: macOS MPICH with persistent communications
    runs-on: macos-latest
    steps:
      - name: Get Requirements
        run: |
          brew install mpich
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Build Directory
        run: mkdir build
      - name: Building
        working-directory: ./build
        run: |
          cmake -DCMAKE_C_COMPILER=gcc-12 \
            -DCMAKE_CXX_COMPILER=g++-12 \
            -DCMAKE_Fortran_COMPILER=gfortran-12 \
            -DCMAKE_BUILD_TYPE=Debug \
            -DDTFFT_RUNNING_CICD=on \
            -DDTFFT_ENABLE_PERSISTENT_COMM=on \
            -DDTFFT_BUILD_SHARED=on \
            -DDTFFT_BUILD_C_CXX_API=off ..
          make VERBOSE=1
      - name: Testing
        working-directory: ./build
        run: DTFFT_ENABLE_LOG=1 CTEST_OUTPUT_ON_FAILURE=1 make test
    
  cuda_shared:
    name: CUDA build with HPC-SDK
    runs-on: ubuntu-latest
    steps:
      - name: Get Requirements
        run: |
          echo 'deb [trusted=yes] https://developer.download.nvidia.com/hpc-sdk/ubuntu/amd64 /' | sudo tee /etc/apt/sources.list.d/nvhpc.list
          sudo apt-get update -y
          sudo apt-get install nvhpc-24-11
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Build Directory
        run: mkdir build
      - name: Building
        working-directory: ./build
        run: |
          PATH=/opt/nvidia/hpc_sdk/Linux_x86_64/24.11/comm_libs/mpi/bin:${PATH}
          PATH=/opt/nvidia/hpc_sdk/Linux_x86_64/24.11/compilers/bin:${PATH}
          PATH=/opt/nvidia/hpc_sdk/Linux_x86_64/24.11/cuda/bin:${PATH}
          export PATH
          cmake -DCMAKE_C_COMPILER=nvc \
            -DCMAKE_CXX_COMPILER=nvc++ \
            -DCMAKE_Fortran_COMPILER=nvfortran \
            -DCMAKE_BUILD_TYPE=Debug \
            -DDTFFT_RUNNING_CICD=on \
            -DDTFFT_ENABLE_PERSISTENT_COMM=on \
            -DDTFFT_BUILD_SHARED=on \
            -DDTFFT_BUILD_C_CXX_API=on \
            -DDTFFT_WITH_PROFILER=on \
            -DDTFFT_WITH_CUDA=on \
            -DDTFFT_WITH_CUFFT=on ..
          make VERBOSE=1
